const App={init:function(){this.initMenu(),this.initSearch(),this.initLazyImages(),this.initScrollEffects()},initMenu:function(){const e=document.querySelector(".menu-toggle"),t=document.querySelector(".sidenav"),n=document.querySelector(".search-toggle"),c=document.querySelector("#search-form");e&&t&&e.addEventListener("click",function(){t.classList.toggle("active"),document.body.classList.toggle("menu-open")}),n&&c&&n.addEventListener("click",function(){c.classList.toggle("active"),document.body.classList.toggle("search-open")}),document.addEventListener("keydown",function(e){"Escape"===e.key&&c.classList.contains("active")&&(c.classList.remove("active"),document.body.classList.remove("search-open"))})},initSearch:function(){const e=document.querySelector("#search-input"),t=document.querySelector("#search-results");if(!e||!t)return;const n=Core.debounce(function(e){e.length>2?performSearch(e):t.innerHTML=""},300);e.addEventListener("input",function(){n(this.value)})},initLazyImages:function(){const e=document.querySelectorAll("img[data-src]");if("IntersectionObserver"in window){const t=new IntersectionObserver(e=>{e.forEach(e=>{if(e.isIntersecting){const n=e.target;n.src=n.dataset.src,n.classList.remove("lazy"),t.unobserve(n)}})});e.forEach(e=>t.observe(e))}else e.forEach(e=>{e.src=e.dataset.src,e.classList.remove("lazy")})},initScrollEffects:function(){const e=document.querySelector("header");if(!e)return;const t=Core.throttle(function(){window.scrollY>100?e.classList.add("scrolled"):e.classList.remove("scrolled")},100);window.addEventListener("scroll",t)}};function performSearch(e){const t=document.querySelector("#search-results");t&&(t.innerHTML='<div class="loading">Searching...</div>',setTimeout(()=>{t.innerHTML=`<div class="search-result">Results for: ${e}</div>`},500))}document.addEventListener("DOMContentLoaded",function(){App.init()}),window.App=App;